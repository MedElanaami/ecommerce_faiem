{% extends 'backend/layouts/base.html.twig' %}
{% block css %}

    <style>
        #chartdiv {
            width: 100%;
            height: 500px;
        }

        #chartdiv1 {
            width: 100%;
            height: 500px;
        }

        #chartdiv2 {
            width: 100%;
            height: 500px;
        }
    </style>
{% endblock %}
{% block content %}
    <div class="content-header">
        <div class="leftside-content-header">
            <ul class="breadcrumbs">
                <li><i class="fa fa-home" aria-hidden="true"></i><a href="#">Dashboard</a></li>
            </ul>
        </div>
    </div>
    <div class="row animated fadeInRight">

        <div class="col-sm-12">

            <div class="panel widgetbox wbox-2 bg-darker-2 color-light">
                <div class="panel-content">
                    <div class="text-center row">
                        {{ form_start(form) }}
                        <div class="form-inline col-md-3">
                            <div class="col-md-4">
                                <label for="name" class="control-label">Début</label>

                            </div>
                            <div class="col-md-8">
                                {{ form_widget(form.dateDebut,{'attr': {'class':'form-control datetimepicker1','required':"required"}}) }}
                            </div>
                        </div>
                        <div class="form-inline col-md-3">
                            <div class="col-md-4">
                                <label for="name" class="col-xs-2 control-label">Fin</label>
                            </div>
                            <div class="col-md-8">
                                {{ form_widget(form.dateFin,{'attr': {'class':'form-control datetimepicker1','required':"required"}}) }}
                            </div>
                        </div>

                        <div class="col-md-3">
                            {{ form_widget(form.valider) }}
                        </div>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
            <div class="panel-content">
                <div class="col-sm-12">
                    <div class="col-sm-3">
                        <div class="panel widgetbox wbox-2 bg-primary color-darker-2">
                            <a href="#">
                                <div class="panel-content">
                                    <div class="row">
                                        <div class="col-xs-2">
                                            <span class="icon fa fa-users color-darker-2"></span>
                                        </div>
                                        <div class="col-xs-10">
                                            <h4 class="subtitle">Clients</h4>
                                               <h1 class="title">{{nbrClients  }}</h1>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="panel widgetbox wbox-2 bg-info color-darker-2">
                            <a href="#">
                                <div class="panel-content">
                                    <div class="row">
                                        <div class="col-xs-2">
                                            <span class="icon fa fa-money color-darker-2"></span>
                                        </div>
                                        <div class="col-xs-10">
                                            <h4 class="subtitle">Cmds</h4>
                                            <h1 class="title">{{nbrCmds  }}</h1>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="panel widgetbox wbox-2 bg-danger color-darker-2">
                            <a href="#">
                                <div class="panel-content">
                                    <div class="row">
                                        <div class="col-xs-2">
                                            <span class="icon fa fa-money color-darker-2"></span>
                                        </div>
                                        <div class="col-xs-10">
                                            <h4 class="subtitle">Cmds Annulée</h4>
                                            <h1 class="title">{{cmdAnnulee  }}</h1>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="panel widgetbox wbox-2 bg-success color-darker-2">
                            <a href="#">
                                <div class="panel-content">
                                    <div class="row">
                                        <div class="col-xs-2">
                                            <span class="icon fa fa-money color-darker-2"></span>
                                        </div>
                                        <div class="col-xs-10">
                                            <h4 class="subtitle">Cmds Validées</h4>
                                            <h1 class="title">{{ cmdConfirmee }}</h1>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="panel-content">
        <div class="col-sm-12">
            <div class="bg-scale-3 p-xs text-center"><h4>Commandes Validées </h4></div>
        </div>
        <div class="col-sm-12">

            <div id="chartdiv1"></div>
        </div>
    </div>
    <div class="panel-content">
        <div class="col-sm-12">
            <div class="bg-scale-3 p-xs text-center"><h4>Clients </h4></div>
        </div>
        <div class="col-sm-12">

            <div id="chartdiv2"></div>
        </div>
    </div>

{% endblock %}
{% block js %}

    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>

    <!-- Chart code -->
    <script>
        am4core.ready(function() {

// Themes begin
            am4core.useTheme(am4themes_animated);
// Themes end

            var chart = am4core.create("chartdiv1", am4charts.XYChart);
            chart.padding(40, 40, 40, 40);

            chart.numberFormatter.bigNumberPrefixes = [
                { "number": 1e+3, "suffix": "K" },
                { "number": 1e+6, "suffix": "M" },
                { "number": 1e+9, "suffix": "B" }
            ];

            var label = chart.plotContainer.createChild(am4core.Label);
            label.x = am4core.percent(97);
            label.y = am4core.percent(95);
            label.horizontalCenter = "right";
            label.verticalCenter = "middle";
            label.dx = -15;
            label.fontSize = 50;

            var playButton = chart.plotContainer.createChild(am4core.PlayButton);
            playButton.x = am4core.percent(97);
            playButton.y = am4core.percent(95);
            playButton.dy = -2;
            playButton.verticalCenter = "middle";
            playButton.events.on("toggled", function(event) {
                if (event.target.isActive) {
                    play();
                }
                else {
                    stop();
                }
            })

            var stepDuration = 4000;

            var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
            categoryAxis.renderer.grid.template.location = 0;
            categoryAxis.dataFields.category = "mois";
            categoryAxis.renderer.minGridDistance = 1;
            categoryAxis.renderer.inversed = true;
            categoryAxis.renderer.grid.template.disabled = true;

            var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
            valueAxis.min = 0;
            valueAxis.rangeChangeEasing = am4core.ease.linear;
            valueAxis.rangeChangeDuration = stepDuration;
            valueAxis.extraMax = 0.1;

            var series = chart.series.push(new am4charts.ColumnSeries());
            series.dataFields.categoryY = "mois";
            series.dataFields.valueX = "montant";
            series.tooltipText = "{valueX.value}"
            series.columns.template.strokeOpacity = 0;
            series.columns.template.column.cornerRadiusBottomRight = 5;
            series.columns.template.column.cornerRadiusTopRight = 5;
            series.interpolationDuration = stepDuration;
            series.interpolationEasing = am4core.ease.linear;

            var labelBullet = series.bullets.push(new am4charts.LabelBullet())
            labelBullet.label.horizontalCenter = "right";
            labelBullet.label.text = "{values.valueX.workingValue} MAD";
            labelBullet.label.textAlign = "end";
            labelBullet.label.dx = -10;

            chart.zoomOutButton.disabled = true;

// as by default columns of the same series are of the same color, we add adapter which takes colors from chart.colors color set
            series.columns.template.adapter.add("fill", function(fill, target){
                return chart.colors.getIndex(target.dataItem.index);
            });

            var year = 2022;
            label.text = year.toString();

            var interval;

            function play() {
                interval = setInterval(function(){
                    nextYear();
                }, stepDuration)
                nextYear();
            }

            function stop() {
                if (interval) {
                    clearInterval(interval);
                }
            }

            function nextYear() {
                year++

                if (year > 2022) {
                    year = 2022;
                }

                var newData = allData[year];
                var itemsWithNonZero = 0;
                for (var i = 0; i < chart.data.length; i++) {
                    chart.data[i].montant = newData[i].montant;
                    if (chart.data[i].montant > 0) {
                        itemsWithNonZero++;
                    }
                }

                if (year == 2022) {
                    series.interpolationDuration = stepDuration / 4;
                    valueAxis.rangeChangeDuration = stepDuration / 4;
                }
                else {
                    series.interpolationDuration = stepDuration;
                    valueAxis.rangeChangeDuration = stepDuration;
                }

                chart.invalidateRawData();
                label.text = year.toString();

                categoryAxis.zoom({ start: 0, end: itemsWithNonZero / categoryAxis.dataItems.length });
            }


            categoryAxis.sortBySeries = series;

            var allData = JSON.parse('{{ cmdsStats|raw }}');

            chart.data = JSON.parse(JSON.stringify(allData[year]));
            categoryAxis.zoom({ start: 0, end: 1 / chart.data.length });

            series.events.on("inited", function() {
                setTimeout(function() {
                    playButton.isActive = true; // this starts interval
                }, 2000)
            })

        }); // end am4core.ready()
    </script>
    <!-- Chart code -->
    <script>
        am4core.ready(function() {

// Themes begin
            am4core.useTheme(am4themes_animated);
// Themes end



            var chart = am4core.create('chartdiv2', am4charts.XYChart)
            chart.colors.step = 2;

            chart.legend = new am4charts.Legend()
            chart.legend.position = 'top'
            chart.legend.paddingBottom = 20
            chart.legend.labels.template.maxWidth = 95

            var xAxis = chart.xAxes.push(new am4charts.CategoryAxis())
            xAxis.dataFields.category = 'mois'
            xAxis.renderer.cellStartLocation = 0.1
            xAxis.renderer.cellEndLocation = 0.9
            xAxis.renderer.grid.template.location = 0;

            var yAxis = chart.yAxes.push(new am4charts.ValueAxis());
            yAxis.min = 0;

            function createSeries(value, name) {
                var series = chart.series.push(new am4charts.ColumnSeries())
                series.dataFields.valueY = value
                series.dataFields.categoryX = 'mois'
                series.name = name

                series.events.on("hidden", arrangeColumns);
                series.events.on("shown", arrangeColumns);

                var bullet = series.bullets.push(new am4charts.LabelBullet())
                bullet.interactionsEnabled = false
                bullet.dy = 30;
                bullet.label.text = '{valueY}'
                bullet.label.fill = am4core.color('#ffffff')

                return series;
            }

            chart.data = JSON.parse('{{ clientsCmdsStats|raw }}');


            createSeries('client', 'Client');
            createSeries('commande', 'Commande');

            function arrangeColumns() {

                var series = chart.series.getIndex(0);

                var w = 1 - xAxis.renderer.cellStartLocation - (1 - xAxis.renderer.cellEndLocation);
                if (series.dataItems.length > 1) {
                    var x0 = xAxis.getX(series.dataItems.getIndex(0), "categoryX");
                    var x1 = xAxis.getX(series.dataItems.getIndex(1), "categoryX");
                    var delta = ((x1 - x0) / chart.series.length) * w;
                    if (am4core.isNumber(delta)) {
                        var middle = chart.series.length / 2;

                        var newIndex = 0;
                        chart.series.each(function(series) {
                            if (!series.isHidden && !series.isHiding) {
                                series.dummyData = newIndex;
                                newIndex++;
                            }
                            else {
                                series.dummyData = chart.series.indexOf(series);
                            }
                        })
                        var visibleCount = newIndex;
                        var newMiddle = visibleCount / 2;

                        chart.series.each(function(series) {
                            var trueIndex = chart.series.indexOf(series);
                            var newIndex = series.dummyData;

                            var dx = (newIndex - trueIndex + middle - newMiddle) * delta

                            series.animate({ property: "dx", to: dx }, series.interpolationDuration, series.interpolationEasing);
                            series.bulletsContainer.animate({ property: "dx", to: dx }, series.interpolationDuration, series.interpolationEasing);
                        })
                    }
                }
            }

        }); // end am4core.ready()
    </script>


{% endblock %}

